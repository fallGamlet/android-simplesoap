package $package;

//This class is auto generated from a wsdl.  Do not edit manually.

## I'm lazy, so I'm over including here....sorry :)

import java.io.Serializable;
import java.util.List;
import java.util.Date;
import org.simpleframework.xml.Element;
import org.simpleframework.xml.ElementList;

public class $type.name implements Serializable {

## create fields with getters and setters and SimpleXML annotations

#if( $type.fields.size() == 0 )
## slap down a dummy field otherwise simplexml barfs.
	@Element(required=false)
	public Object dummy;
#else

#foreach( $field in $type.fields )
#if ($field.isList())
	@ElementList(inline=true, required=false, entry="${field.name}")
#else
	@Element(required=false)
#end
	$field.type $field.name;
	public $field.type get$field.name () {
		return $field.name;
	}
	public void set$field.name ($field.type val) {
		$field.name = val;
	}
	
#end
#end

## create a constructor with all fields, if we have any fields

#if( $type.fields.size() > 0)	
#set( $comma = "" )
	public $type.name (
#foreach( $field in $type.fields ) 
		$comma $field.type $field.name
#set( $comma = "," )
#end
		) {
#foreach( $field in $type.fields )
		this.$field.name = $field.name;
#end	
	}
#end	
	
## create empty constructor (this is required for simplexml)
	public $type.name () {
	}
	
## create clone method
	public $type.name clone($type.name target) {
		$type.name clone;
		if(null != target)
			clone = target;
		else
			clone = new ${type.name}();
		
#foreach( $field in $type.fields )
	    clone.$field.name = this.$field.name;
#end
	
		return clone;
	}

}